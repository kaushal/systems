The first thing our program does is evaluates the customer database and stores the information in a hash table.  We used http://troydhanson.github.io/uthash/userguide.html this hash table.  Our producer thread then begins reading in orders and placing them in queues associated with consumer threads.  Consumer threads obtain a lock, check that the producer is not finished producing and check for items in its queue.  If those are true, it removes  items from its queue and evaluates them.  Success or failure of the order is stored in a linked list.  The producer and consumers communicate through a producer flag.  There is minimal busy waiting because of this.  We also do not deadlock because we use mutexes correctly.  

